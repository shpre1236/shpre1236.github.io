import{_ as a,c as e,o as s,ag as r}from"./chunks/framework.BgId8OS5.js";const o="/assets/isaac_sim_requirements.Dal-whpY.png",n="/assets/ncp_pricing.BcVdGy5m.png",p="/assets/ncp_quota_status.B8KU6yoX.png",i="/assets/ncp_server_1.CxNbOthT.png",c="/assets/ncp_server_2.CMzBlhP5.png",l="/assets/ncp_server_3.BavhrYD9.png",m="/assets/ncp_server_4.DuXZyiMV.png",_="/assets/ncp_server_5.DWyQ4Ipe.png",d="/assets/ncp_server_6.CSkLev8G.png",u="/assets/ncp_server_7.LP17iHkl.png",b=JSON.parse('{"title":"Isaac Sim Server 설치방법","description":"","frontmatter":{},"headers":[],"relativePath":"development/simulator/isaac-sim-installation-1.md","filePath":"development/simulator/isaac-sim-installation-1.md","lastUpdated":1749471836000}'),g={name:"development/simulator/isaac-sim-installation-1.md"};function P(h,t,S,v,C,f){return s(),e("div",null,t[0]||(t[0]=[r('<h1 id="isaac-sim-server-설치방법" tabindex="-1">Isaac Sim Server 설치방법 <a class="header-anchor" href="#isaac-sim-server-설치방법" aria-label="Permalink to &quot;Isaac Sim Server 설치방법&quot;">​</a></h1><p>Isaac Sim은 standalone, deployment로 제공한다. 그 중에서 standalone은 개인 PC에 설치하는 것을 의미하고 deployment는 클라우드의 사용량을 최대로 하기 위한 방법으로 클라우드에 설치하고 로컬 PC에서는 렌더링 결과를 가져와서 보여주기만 하는 headless 방법을 의미한다.</p><p>이번에는 클라우드, 그 중에서도 Naver Cloud Platform, NCP를 활용해서 Isaac Sim을 설치하는 방법을 알아보고자 한다.</p><h2 id="목표" tabindex="-1">목표 <a class="header-anchor" href="#목표" aria-label="Permalink to &quot;목표&quot;">​</a></h2><p>이번 포스트에서는 NCP에 GPU 서버를 발급하고 접근하는 것을 목표로 할 것이다.</p><p>Isaac Sim 사양을 살펴보면 최신 Ubuntu LTS 버전인 24.04는 지원하지 않는 것을 확인할 수 있다. 또한 권장 사양을 보면 RAM 64GB, VRAM 16GB로 적지 않은 리소스를 요구하는 것을 확인할 수 있다. <img src="'+o+'" alt="alt text"></p><p>처음에는 Isaac Sim을 사용해보는 것이 첫 목표이기 때문에 경제적인 면을 고려해서 NCP에서 감당가능한 T4, 그 중에서도 gp1t8-g1-s50을 사용할 것이다. 메모리가 40GB로 살짝 아쉽지만 돈이 있으면 나중에 업그레이드를 고려해보자. (참고: <a href="https://www.ncloud.com/product/compute/gpuServer?region=KR#pricing" target="_blank" rel="noreferrer">NCP 과금정책</a>) <img src="'+n+'" alt="alt text"></p><h2 id="gpu-서버-한도-상향" tabindex="-1">GPU 서버 한도 상향 <a class="header-anchor" href="#gpu-서버-한도-상향" aria-label="Permalink to &quot;GPU 서버 한도 상향&quot;">​</a></h2><p>처음 계정을 생성하고 <a href="https://console.ncloud.com/service-quota/quota-status" target="_blank" rel="noreferrer">Quota Status</a>에 접속하면 기본 한도가 0으로 설정되어 있다. 이를 늘려야 생성이 가능하다. 개인 개정의 경우에는 FAQ 문의를 통해서만 한도를 늘릴수 있다고 한다. <img src="'+p+'" alt="alt text"></p><h2 id="gpu-서버-발급" tabindex="-1">GPU 서버 발급 <a class="header-anchor" href="#gpu-서버-발급" aria-label="Permalink to &quot;GPU 서버 발급&quot;">​</a></h2><p>NCP 활용을 위해서 Server 생성으로 들어가자. <img src="'+i+'" alt="alt text"></p><p>Isaac Sim 설치가 가능한 22.04/20.04 설치를 위해서 NCP 서버 이미지로 이동해서 ubuntu-20.04로 설치를 진행한다. XEN 하이퍼바이저를 사용하는 것도 함께 확인한다. <img src="'+c+'" alt="alt text"></p><p>NCP, 그 중에서도 VPC platform의 서버 생성 규칙에 따라 서버를 생성하기 이전에 VPC와 subnet 생성이 필요하다. <img src="'+l+'" alt="alt text"></p><p>VPC 생성 버튼을 눌러서 생성하자. IP 주소 범위는 VPC 내에 할당되는 서버의 개수에 따라 달라질텐데 필자는 GPU 서버 하나만 사용할 예정이므로 <code>/24</code>로 설정하였다. VPC 생성이 완료되면 비슷하게 subnet도 생성해준다. VPC 또한 과금 정책에 포함되는 인스턴스이므로 추후에 사용하지 않으면 꼭 삭제하도록 하자. <img src="'+m+'" alt="alt text"><img src="'+_+'" alt="alt text"></p><p>그렇게 하고 난 후에 서버 설정으로 돌아오게 되면 VPC, subnet 설정이 가능한 것을 확인할 수 있다. 서버 스펙에 GPU &gt; T4 &gt; gp1t8-g1-s50 을 선택해주고 (월요금제 67만원을 보고 한번 놀라준 후) 서버 개수 1개를 입력해준다. 이후에 Network Interface에 <code>+추가</code>를 눌러주어야 eth0가 생성이된다. <img src="'+d+'" alt="alt text"></p><p>이미 인스터스에 SSD 50GB가 포함되어 있기 때문에 스토리지는 넘어가도록 한다. 인증키 설정에서는 새로운 인증키 생성을 해서 <code>.pem</code>파일을 저장해두자. 추후 ssh 연결할 때 사용한다. <img src="'+u+'" alt="alt text"></p><p>네트워크 접근 설정에서 ACG를 추가한 후에 최종 확인에서 마지막으로 모든 것을 확인 한 후에 <code>서버 생성</code>을 누르면 서버가 생성된다.</p>',17)]))}const G=a(g,[["render",P]]);export{b as __pageData,G as default};
